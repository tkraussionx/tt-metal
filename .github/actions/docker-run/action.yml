name: "Run set of commands in Docker"
description: "Run commands in docker"

inputs:
  run_args:
    description: 'Commands to run in docker'
    required: true
  docker_os_arch:
    description: 'Docker image architecture'
    required: false
    default: ubuntu-20.04-amd64
  docker_username:
    description: docker login username
    required: true
    default: ${{ github.actor }}
  docker_password:
    description: docker login password
    required: true
  docker_opts:
    description: 'Docker options'
    required: false
  device:
    description: "Description of Device as it is used in docker run command."
    type: string
    required: false
    default: |
      -v /dev/hugepages-1G:/dev/hugepages-1G
      --device /dev/tenstorrent
  install_wheel:
    description: "Install the wheel that contains all of the Python environment. The artifact needs to be present."
    type: boolean
    required: false
    default: false
runs:
  using: "composite"
  steps:
    - name: Determine docker image tag
      uses: ./.github/actions/generate-docker-tag
      with:
        image: ${{ inputs.docker_os_arch }}
    - name: Set
      shell: bash
      run: |
        echo "RUNNER_UID=$(id -u)" >> $GITHUB_ENV
        echo "RUNNER_GID=$(id -g)" >> $GITHUB_ENV
    - name: Docker login
      uses: docker/login-action@v3
      with:
        registry: https://ghcr.io
        username: ${{ inputs.docker_username }}
        password: ${{ inputs.docker_password }}
    - name: Pull docker image
      shell: bash
      run: |
        docker pull ${{ env.TT_METAL_DOCKER_IMAGE_TAG }}
    - uses: addnab/docker-run-action@v3
      with:
        shell: bash
        username: ${{ inputs.docker_username }}
        password: ${{ inputs.docker_password }}
        registry: ghcr.io
        image: ${{ env.TT_METAL_DOCKER_IMAGE_TAG }}
        # The most important option below is `--rm`. Otherwise, the machines will fill up with undeleted containers.
        # The mounting of /etc/passwd, /etc/shadow, and /etc/bashrc is required in order for the correct file permissions
        # for newly created files.
        # Passing HOME variable is necessary to avoid Python lib installation into /home/ubuntu/.local folder which
        # may not be writable by the RUNNER_UID user.
        # --log-driver none: Do not save logs to disk as we're printing them to GitHub
        # and it takes up space
        options: |
          -u ${{ env.RUNNER_UID }}:${{ env.RUNNER_GID }}
          --rm
          -v /etc/passwd:/etc/passwd:ro
          -v /etc/shadow:/etc/shadow:ro
          -v /etc/bashrc:/etc/bashrc:ro
          -v ${{ github.workspace }}:${{ github.workspace }}
          --net=host
          --log-driver none
          ${{ inputs.docker_opts }}
          -e LOGURU_LEVEL=${{ env.LOGURU_LEVEL }}
          -e PYTHONPATH=${{ github.workspace }}
          -e HOME=${{ github.workspace }}
          ${{ inputs.device }}
          -w ${{ github.workspace }}
        run: |
          if [ ${{ inputs.install_wheel }} ]; then
            WHEEL_FILENAME=$(ls -1 *.whl)
            pip3 install $WHEEL_FILENAME
          fi
          ${{ inputs.run_args }}
